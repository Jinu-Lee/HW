7FF618AC1C36

[rbp+8] = "2019311218" //id
call 7FF618AC13AC // 암호 형태 변경 후 atoi
*(rbp + 44) = eax // 7bf02f68
eax = *(rbp + 44)
eax = eax << 4  // bf02f680
*(rbp + 44) = eax
eax = *(rbp + 44)
eax = eax & B08BC // 20080 = 131200
*(rbp + 44) = eax
edx = *(rbp + 44)
ecx = *(rbp + 24)   // input = *8200*
call 7FF618AC1131 // input 형태 변경해 변경된 암호와 비교
if (rax = 1) {
    correct
}
else {
    incorrect
}



7FF618AC13AC
-> 7FF618AC1790

*(rsp + 8) = rcx -> 입력한 문자열 주소
rsp = rsp - 148
rbp = rsp + 20
rdi = rsp
ecx = 52
eax = CCCCCCCC
rcx = *(rsp + 168) = 7FF618ACAC40
rcx = 00007FF618AD2015
call 7FF618AC1087
*(rbp + 4) = 1
*(rbp + 24) = 0
*(rbp + 44) = 0

eax = 1
rax = rax * 2
rcx = *(rbp + 140)
eax = *(rcx + rax) // 20'1'9311218
*(rbp + 44) = al //'1'
rcx = *(rbp + 140)
call 7FF618AC1032 //strlen -> rax = 10
ecx = 1
rcx = rcx * 2
rdx = *(rbp + 140)
r8 = *(rbp + 140)
eax = *(r8 + rax - 1) // 201931121'8'
*(rdx + rcx) = al //'8' -> 20'1'9311218 ==> 20'8'9311218
rcx = *(rbp + 140)
call 7FF618AC1032 //strlen -> rax = 10
rcx = *(rbp + 140)
edx = *(rbp + 44) //43번째 줄에서 1 저장
*(rcx + rax - 1) = dl //'1' -> 208931121'8' ==> 208931121'1'

eax = 1
rax = rax * 3
rcx = *(rbp + 140)
eax = *(rcx + rax) //208'9'311211
*(rbp + 44) = al //'9'
rcx = *(rbp + 140)
call 7FF618AC1032 //strlen -> rax = 10
ecx = 1
rcx = rcx * 3
rdx = *(rbp + 140)
r8 = *(rbp + 140)
eax = *(r8 + rax - 2) //20893112'1'1
*(rdx + rcx) = al //'1' -> 208'9'311211 ==> 208'1'311211
rcx = *(rbp + 140)
call 7FF618AC1032 //strlen -> rax = 10
rcx = *(rbp + 140)
edx = *(rbp + 44) //63번째줄에서 '9' 저장
*(rcx + rax - 2) = dl //'9' -> 20813112'1'1 ==> 20813112'9'1

call atoi //rax = 0x7c0e4a3b = 2081311291    01111100000011100100101000111011
*(rbp + 4) = eax
eax = *(rbp + 4)
eax = eax << 4 // rax = 0xc0e4a3b0
eax = *(rbp + 4)
*(rbp + 4) = eax
eax = *(rbp + 4)
eax = eax >> 4 // arithmetic, rax = 0xfc0e4a3b
*(rbp + 4) = eax
eax = *(rbp + 4)
eax = eax + 0x7cc // fc0e5207
*(rbp + 4) = eax
eax = *(rbp + 4)
eax = eax ^ 0x7801829F // 840fd098
*(rbp + 4) = eax
if (*(rbp + 4) < 0) {   //dword
    eax = (-1) * *(rbp + 4) // 
    *(rbp + 4) = eax
}
eax = *(rbp + 4)
rsp = *(rbp + 128)
return      // 7bf02f68

7FF618AC1131            //input 변형해 check
-> 7FF618AC1940
*(rsp + 10) = edx
*(rsp + 8) = ecx
rsp = rsp - E8
rbp = rsp + 20
rdi = rsp
ecx = 3A
eax = CCCCCCCC
ecx = *(rsp + 108) // 20080
rcx = 7FF618AD2015
call 7FF618AC1087
eax = *(rbp + E0) // input
eax = eax << 4 
*(rbp + E0) = eax
eax = *(rbp + E0)
eax = eax & B08BC
*(rbp + E0) = eax
eax = *(rbp + E8)
ecx = *(rbp + E0)
ecx = eax - ecx
eax = ecx
if (eax == 0) {
    al = 1
}
else {
    al = 0
}
rsp = rbp + C8
return

7FF618AC1087
-> 7FF618AC2220
*(rsp + 8) = rcx
rsp = rsp - 38
rax = *(rsp + 40)
*(rsp + 20) = rax
rax = *(rsp + 40)
rax = *rax
if (rax == 0)
    return
if (*7FF618ACD8D4 == 0)
    return
if (*7FF618ACD8D4 != eax)
    return

